{"version":3,"sources":["pages/home.js","pages/about.js","pages/project.js","pages/hobby.js","pages/work.js","components/Header.js","components/Aside.js","App.js","serviceWorker.js","index.js"],"names":["Home","Component","About","className","Project","Hobby","Work","Header","state","showMenu","bind","closeMenu","event","preventDefault","this","setState","document","addEventListener","removeEventListener","to","src","alt","onClick","ref","element","dropdownMenu","class","Aside","href","target","App","basename","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.bb9262e1.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nclass Home extends Component {\n  render() {\n    return (\n      <>\n        <h2>Hello 😊</h2>\n      </>\n    );\n  }\n}\n\nexport default Home;\n","import React, { Component } from \"react\";\n\nclass About extends Component {\n  render() {\n    return (\n      <>\n        <h2>About</h2>\n        <section className=\"ko\">\n          <b>헌법개정안이 제2항의</b>\n          <p>\n            훈장등의 영전은 이를 받은 자에게만 효력이 있고, 어떠한 특권도 이에\n            따르지 아니한다. 국무위원은 국무총리의 제청으로 대통령이 임명한다.\n            법관이 중대한 심신상의 장해로 직무를 수행할 수 없을 때에는 법률이\n            정하는 바에 의하여 퇴직하게 할 수 있다. 모든 국민은 근로의 권리를\n            가진다. 국가는 사회적·경제적 방법으로 근로자의 고용의 증진과\n            적정임금의 보장에 노력하여야 하며, 법률이 정하는 바에 의하여\n            최저임금제를 시행하여야 한다. 대통령으로 선거될 수 있는 자는\n            국회의원의 피선거권이 있고 선거일 현재 40세에 달하여야 한다.\n            신체장애자 및 질병·노령 기타의 사유로 생활능력이 없는 국민은 법률이\n            정하는 바에 의하여 국가의 보호를 받는다.\n          </p>\n        </section>\n        \n      </>\n    );\n  }\n}\n\nexport default About;\n","import React, { Component } from \"react\";\n\nclass Project extends Component {\n  render() {\n    return (\n      <>\n        <h2>Project</h2>\n        <section className=\"ko\">\n          룰ㄹ룰랄랄ㄹ별과 살았으며, 가는 얼음 낙원을 너의 속잎나고, 자신과\n          위하여, 이것이다. 트고, 듣기만 인생에 부패뿐이다.모든 국민은 근로의\n          권리를 가진다. 국가는 사회적·경제적 방법으로 근로자의 고용의 증진과\n          적정임금의 보장에 노력하여야 하며, 법률이 정하는 바에 의하여\n          최저임금제를 시행하여야 한다.\n        </section>\n      </>\n    );\n  }\n}\n\nexport default Project;\n","import React, { Component } from \"react\";\n\nclass Hobby extends Component {\n  render() {\n    return (\n      <>\n        <h2>Hobby</h2>\n        <section>\n          <b>Abstract Design</b>\n          <p>\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\n            eiusmod tempor incididunt ut labore et dolore magna aliqua. Nisl\n            tincidunt eget nullam non. Quis hendrerit dolor magna eget est lorem\n            ipsum dolor sit. Volutpat odio facilisis mauris sit amet massa.\n            Commodo odio aenean sed adipiscing diam donec adipiscing tristique.\n            Mi eget mauris pharetra et. Non tellus orci ac auctor augue. Elit at\n            imperdiet dui accumsan sit. Ornare arcu dui vivamus arcu felis.\n            Egestas integer eget aliquet nibh praesent. In hac habitasse platea\n            dictumst quisque sagittis purus. Pulvinar elementum integer enim\n            neque volutpat ac.\n          </p>\n        </section>\n        \n      </>\n    );\n  }\n}\n\nexport default Hobby;\n","import React, { Component } from \"react\";\n\nclass Work extends Component {\n  render() {\n    return (\n      <>\n        <h2>Work</h2>\n        <section className=\"ko\">룰ㄹ룰랄랄ㄹ</section>\n        <section>\n          <b>Abstract Design</b>\n          <p>\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\n            eiusmod tempor incididunt ut labore et dolore magna aliqua. Nisl\n            tincidunt eget nullam non. Quis hendrerit dolor magna eget est lorem\n            ipsum dolor sit. Volutpat odio facilisis mauris sit amet massa.\n            Commodo odio aenean sed adipiscing diam donec adipiscing tristique.\n            Mi eget mauris pharetra et. Non tellus orci ac auctor augue. Elit at\n            imperdiet dui accumsan sit. Ornare arcu dui vivamus arcu felis.\n            Egestas integer eget aliquet nibh praesent. In hac habitasse platea\n            dictumst quisque sagittis purus. Pulvinar elementum integer enim\n            neque volutpat ac.\n          </p>\n        </section>\n      </>\n    );\n  }\n}\n\nexport default Work;\n","import React, { Component } from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nclass Header extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      showMenu: false,\n    };\n\n    this.showMenu = this.showMenu.bind(this);\n    this.closeMenu = this.closeMenu.bind(this);\n  }\n\n  showMenu(event) {\n    event.preventDefault();\n\n    this.setState({ showMenu: true }, () => {\n      document.addEventListener(\"click\", this.closeMenu);\n    });\n  }\n\n  closeMenu() {\n    this.setState({ showMenu: false }, () => {\n      document.removeEventListener(\"click\", this.closeMenu);\n    });\n  }\n  render() {\n    return (\n      <header>\n        <h1>\n          <NavLink to={\"/\"}>\n            Mountain\n            <img src=\"./assets/images/logo.png\" alt=\"\" />\n          </NavLink>\n        </h1>\n        <div className=\"toggle-wrap\">\n          <button className=\"toggle-btn\" onClick={this.showMenu}>\n            <span className=\"img\">\n              <img src=\"./assets/images/mountain.jpeg\" alt=\"\" />\n            </span>\n            <span className=\"ko\">박산아</span>\n            <i className=\"xi-angle-down\"></i>\n          </button>\n\n          {this.state.showMenu ? (\n            <div className=\"menu toggle-content\" ref={(element) => { this.dropdownMenu = element; }} >\n              <p>\n                <button>뭘 담을까</button>\n                <button class=\"copy\">고민을 좀</button>\n              </p>\n              <p class=\"gubun\">\n                <button>해봐야겠어</button>\n              </p>\n            </div>\n          ) : null}\n        </div>\n      </header>\n    );\n  }\n}\n\nexport default Header;\n","import React, { Component } from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nclass Aside extends Component {\n  render() {\n    return (\n      <aside>\n        <nav>\n          <h3>MENU</h3>\n          <ul className=\"gnb\">\n            <li>\n              <NavLink to={\"/about\"}>\n                <i className=\"xi-face\"></i>\n                <span>About</span>\n              </NavLink>\n            </li>\n            <li>\n              <NavLink to={\"/project\"}>\n                <i className=\"xi-bookmark-o\"></i>\n                <span>Project</span>\n              </NavLink>\n            </li>\n            <li>\n              <NavLink to={\"/hobby\"}>\n                <i className=\"xi-book-o\"></i>\n                <span>Hobby</span>\n              </NavLink>\n            </li>\n            <li>\n              <NavLink to={\"/work\"}>\n                <i className=\"xi-briefcase\"></i>\n                <span>Work</span>\n              </NavLink>\n            </li>\n          </ul>\n        </nav>\n        <nav>\n          <h3>EXTERNAL</h3>\n          <ul className=\"contact-menu\">\n            <li>\n              <a href=\"https://github.com/Mountainah?tab=repositories\" target=\"_brank\">\n                <i className=\"xi-github-alt\"></i>\n                <span>github</span>\n              </a>\n            </li>\n            <li>\n              <a href=\"https://velog.io/@mountain\" target=\"_brank\">\n                <i className=\"xi-browser-text\"></i>\n                <span>velog</span>\n              </a>\n            </li>\n          </ul>\n        </nav>\n      </aside>\n    );\n  }\n}\n\nexport default Aside;\n","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport \"./App.css\";\nimport Home from \"./pages/home\";\nimport About from \"./pages/about\";\nimport Project from \"./pages/project\";\nimport Hobby from \"./pages/hobby\";\nimport Work from \"./pages/work\";\nimport Header from \"./components/Header\";\nimport Aside from \"./components/Aside\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Router basename={'/mysite'}>\n        <div className=\"wrap\">\n          <Header />\n          <main>\n            <Aside />\n            <section className=\"content\">\n              <Switch>\n                <Route exact path={`/`} component={Home} />\n                <Route path={`/about`} component={About} />\n                <Route path={`/project`} component={Project} />\n                <Route path={`/hobby`} component={Hobby} />\n                <Route path={`/work`} component={Work} />\n              </Switch>\n            </section>\n          </main>\n        </div>\n      </Router>\n    );\n  }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();"],"sourceRoot":""}